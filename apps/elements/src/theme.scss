@use '@angular/material' as mat;
@include mat.all-component-typographies();
@include mat.core();

@import '../../../libs/ngx-mime/ngx-mime.theme.scss';

$blue-foreground-palette: (
  base: black,
  divider: rgba(black, 0.12),
  dividers: rgba(black, 0.12),
  disabled: rgba(black, 0.38),
  disabled-button: rgba(black, 0.26),
  disabled-text: rgba(black, 0.38),
  elevation: black,
  hint-text: rgba(black, 0.38),
  secondary-text: rgba(black, 0.54),
  icon: rgba(black, 0.54),
  icons: rgba(black, 0.54),
  text: rgba(black, 0.9),
  slider-min: rgba(black, 0.87),
  slider-off: rgba(black, 0.26),
  slider-off-active: rgba(black, 0.38),
);

$blue-primary: mat.define-palette(mat.$light-blue-palette, 900, 100, 700);
$blue-accent: mat.define-palette(mat.$light-blue-palette, 900, 100, 700);
$blue-theme: mat.define-light-theme(
  (
    color: (
      primary: $blue-primary,
      accent: $blue-accent,
    ),
  )
);

// Define an alternate dark theme.
$dark-primary: mat.define-palette(mat.$light-blue-palette, 900, 100, 700);
$dark-accent: mat.define-palette(mat.$light-blue-palette, 300, 200, 400);

$dark-theme: mat.define-dark-theme(
  (
    color: (
      primary: $dark-primary,
      accent: $dark-accent,
      foreground: $blue-foreground-palette,
    ),
  )
);
.ngx-mime-dark-theme {
  @include ngx-mime-theme($dark-theme);
  @include mat.all-component-colors($dark-theme);
}

@include ngx-mime-theme($blue-theme);
@include mat.all-component-themes($blue-theme);
