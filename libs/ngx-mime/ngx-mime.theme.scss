@use '@angular/material' as mat;

@use 'src/lib/attribution-dialog/_attribution-dialog.component-theme.scss' as
  attribution;
@use 'src/lib/information-dialog/metadata/_metadata.component.theme.scss' as
  metadata;
@use 'src/lib/viewer/_viewer.component-theme.scss' as viewer;
@use 'src/lib/content-search-dialog/_content-search-dialog.component-theme.scss'
  as content-search-dialog;
@use 'src/lib/viewer/osd-toolbar/osd-toolbar.component.theme' as osd-toolbar;

@mixin ngx-mime-theme($theme) {
  @include attribution.theme($theme);
  @include metadata.theme($theme);
  @include viewer.theme($theme);
  @include content-search-dialog.theme($theme);
  @include osd-toolbar.theme($theme);

  .mime-dialog {
    .mat-mdc-dialog-surface {
      background: mat.get-theme-color($theme, surface-container-low);
    }
  }

  .viewer-container,
  .mime-dialog {
    a {
      color: mat.get-theme-color($theme, tertiary);
      text-decoration: none;
    }

    .secondary-toolbar {
      @if mat.get-theme-type($theme) == dark {
        background: mat.get-theme-color($theme, surface-container);
        color: mat.get-theme-color($theme, on-surface);
      } @else {
        background: mat.get-theme-color($theme, secondary-container);
        color: mat.get-theme-color($theme, on-secondary-container);
      }
    }
  }

  .mime-mobile-dialog {
    .mat-mdc-dialog-surface {
      border-radius: unset;
    }
    max-width: 100% !important;
  }
}
