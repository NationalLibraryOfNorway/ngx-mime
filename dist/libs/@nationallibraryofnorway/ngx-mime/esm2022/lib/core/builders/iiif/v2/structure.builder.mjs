import { Structure } from '../../../models/manifest';
import { BuilderUtils } from './builder-utils';
export class StructureBuilder {
    constructor(structures, sequences) {
        this.structures = structures;
        this.sequences = sequences;
    }
    build() {
        const structures = [];
        if (this.structures) {
            for (let i = 0; i < this.structures.length; i++) {
                const structure = this.structures[i];
                structures.push(new Structure({
                    id: BuilderUtils.extractId(structure),
                    type: BuilderUtils.extracType(structure),
                    label: structure.label,
                    canvases: structure.canvases,
                    canvasIndex: BuilderUtils.findCanvasIndex(structure.canvases, this.sequences),
                }));
            }
        }
        return structures;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3RydWN0dXJlLmJ1aWxkZXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9saWJzL25neC1taW1lL3NyYy9saWIvY29yZS9idWlsZGVycy9paWlmL3YyL3N0cnVjdHVyZS5idWlsZGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBWSxTQUFTLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsTUFBTSxPQUFPLGdCQUFnQjtJQUMzQixZQUNVLFVBQWlCLEVBQ2pCLFNBQXFCO1FBRHJCLGVBQVUsR0FBVixVQUFVLENBQU87UUFDakIsY0FBUyxHQUFULFNBQVMsQ0FBWTtJQUM1QixDQUFDO0lBRUosS0FBSztRQUNILE1BQU0sVUFBVSxHQUFnQixFQUFFLENBQUM7UUFDbkMsSUFBSSxJQUFJLENBQUMsVUFBVSxFQUFFLENBQUM7WUFDcEIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsTUFBTSxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUM7Z0JBQ2hELE1BQU0sU0FBUyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3JDLFVBQVUsQ0FBQyxJQUFJLENBQ2IsSUFBSSxTQUFTLENBQUM7b0JBQ1osRUFBRSxFQUFFLFlBQVksQ0FBQyxTQUFTLENBQUMsU0FBUyxDQUFDO29CQUNyQyxJQUFJLEVBQUUsWUFBWSxDQUFDLFVBQVUsQ0FBQyxTQUFTLENBQUM7b0JBQ3hDLEtBQUssRUFBRSxTQUFTLENBQUMsS0FBSztvQkFDdEIsUUFBUSxFQUFFLFNBQVMsQ0FBQyxRQUFRO29CQUM1QixXQUFXLEVBQUUsWUFBWSxDQUFDLGVBQWUsQ0FDdkMsU0FBUyxDQUFDLFFBQVEsRUFDbEIsSUFBSSxDQUFDLFNBQVMsQ0FDZjtpQkFDRixDQUFDLENBQ0gsQ0FBQztZQUNKLENBQUM7UUFDSCxDQUFDO1FBQ0QsT0FBTyxVQUFVLENBQUM7SUFDcEIsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgU2VxdWVuY2UsIFN0cnVjdHVyZSB9IGZyb20gJy4uLy4uLy4uL21vZGVscy9tYW5pZmVzdCc7XG5pbXBvcnQgeyBCdWlsZGVyVXRpbHMgfSBmcm9tICcuL2J1aWxkZXItdXRpbHMnO1xuXG5leHBvcnQgY2xhc3MgU3RydWN0dXJlQnVpbGRlciB7XG4gIGNvbnN0cnVjdG9yKFxuICAgIHByaXZhdGUgc3RydWN0dXJlczogYW55W10sXG4gICAgcHJpdmF0ZSBzZXF1ZW5jZXM6IFNlcXVlbmNlW10sXG4gICkge31cblxuICBidWlsZCgpOiBTdHJ1Y3R1cmVbXSB7XG4gICAgY29uc3Qgc3RydWN0dXJlczogU3RydWN0dXJlW10gPSBbXTtcbiAgICBpZiAodGhpcy5zdHJ1Y3R1cmVzKSB7XG4gICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuc3RydWN0dXJlcy5sZW5ndGg7IGkrKykge1xuICAgICAgICBjb25zdCBzdHJ1Y3R1cmUgPSB0aGlzLnN0cnVjdHVyZXNbaV07XG4gICAgICAgIHN0cnVjdHVyZXMucHVzaChcbiAgICAgICAgICBuZXcgU3RydWN0dXJlKHtcbiAgICAgICAgICAgIGlkOiBCdWlsZGVyVXRpbHMuZXh0cmFjdElkKHN0cnVjdHVyZSksXG4gICAgICAgICAgICB0eXBlOiBCdWlsZGVyVXRpbHMuZXh0cmFjVHlwZShzdHJ1Y3R1cmUpLFxuICAgICAgICAgICAgbGFiZWw6IHN0cnVjdHVyZS5sYWJlbCxcbiAgICAgICAgICAgIGNhbnZhc2VzOiBzdHJ1Y3R1cmUuY2FudmFzZXMsXG4gICAgICAgICAgICBjYW52YXNJbmRleDogQnVpbGRlclV0aWxzLmZpbmRDYW52YXNJbmRleChcbiAgICAgICAgICAgICAgc3RydWN0dXJlLmNhbnZhc2VzLFxuICAgICAgICAgICAgICB0aGlzLnNlcXVlbmNlcyxcbiAgICAgICAgICAgICksXG4gICAgICAgICAgfSksXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBzdHJ1Y3R1cmVzO1xuICB9XG59XG4iXX0=