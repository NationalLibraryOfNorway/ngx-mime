import { BreakpointObserver, Breakpoints, } from '@angular/cdk/layout';
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, ViewChild, } from '@angular/core';
import { Subscription } from 'rxjs';
import { IiifManifestService } from '../../core/iiif-manifest-service/iiif-manifest-service';
import { ViewingDirection } from '../../core/models/viewing-direction';
import { CanvasService } from './../../core/canvas-service/canvas-service';
import { MimeViewerIntl } from './../../core/intl';
import { ViewerService } from './../../core/viewer-service/viewer.service';
import { ModeService } from './../../core/mode-service/mode.service';
import { easeInWithDelay, rotate45 } from './../../shared/animations';
import * as i0 from "@angular/core";
import * as i1 from "./../../core/intl";
import * as i2 from "@angular/cdk/layout";
import * as i3 from "./../../core/viewer-service/viewer.service";
import * as i4 from "./../../core/canvas-service/canvas-service";
import * as i5 from "../../core/iiif-manifest-service/iiif-manifest-service";
import * as i6 from "./../../core/mode-service/mode.service";
import * as i7 from "@angular/common";
import * as i8 from "@angular/material/button";
import * as i9 from "@angular/material/icon";
import * as i10 from "@angular/material/tooltip";
export class OsdToolbarComponent {
    constructor(intl, breakpointObserver, changeDetectorRef, viewerService, canvasService, iiifManifestService, modeService) {
        this.intl = intl;
        this.breakpointObserver = breakpointObserver;
        this.changeDetectorRef = changeDetectorRef;
        this.viewerService = viewerService;
        this.canvasService = canvasService;
        this.iiifManifestService = iiifManifestService;
        this.modeService = modeService;
        this.numberOfCanvasGroups = 0;
        this.isFirstCanvasGroup = false;
        this.isLastCanvasGroup = false;
        this.invert = false;
        this.isWeb = false;
        this.fabState = 'closed';
        this.fabIcon = 'menu';
        this.showControlButtons = false;
        this.baseAnimationDelay = 20;
        this.isZoomed = true;
        this.subscriptions = new Subscription();
    }
    ngOnInit() {
        this.subscriptions.add(this.modeService.onChange.subscribe(() => {
            this.isZoomed = this.modeService.isPageZoomed();
            this.changeDetectorRef.detectChanges();
        }));
        this.subscriptions.add(this.breakpointObserver
            .observe([Breakpoints.Web])
            .subscribe((value) => {
            this.isWeb = value.matches;
            this.changeDetectorRef.detectChanges();
        }));
        this.subscriptions.add(this.iiifManifestService.currentManifest.subscribe((manifest) => {
            if (manifest) {
                this.invert = manifest.viewingDirection === ViewingDirection.LTR;
                this.changeDetectorRef.detectChanges();
            }
        }));
        this.subscriptions.add(this.viewerService.onCanvasGroupIndexChange.subscribe((currentCanvasGroupIndex) => {
            this.numberOfCanvasGroups = this.canvasService.numberOfCanvasGroups;
            this.isFirstCanvasGroup = this.isOnFirstCanvasGroup(currentCanvasGroupIndex);
            this.isLastCanvasGroup = this.isOnLastCanvasGroup(currentCanvasGroupIndex);
            this.changeDetectorRef.detectChanges();
        }));
        this.subscriptions.add(this.intl.changes.subscribe(() => this.changeDetectorRef.markForCheck()));
    }
    toggleFab() {
        this.showControlButtons = !this.showControlButtons;
        this.fabState = this.fabState === 'closed' ? 'open' : 'closed';
        this.fabIcon = this.fabState === 'closed' ? 'menu' : 'clear';
    }
    zoomIn() {
        this.viewerService.zoomIn();
    }
    zoomOut() {
        this.viewerService.zoomOut();
    }
    home() {
        this.viewerService.home();
    }
    rotate() {
        this.viewerService.rotate();
    }
    ngOnDestroy() {
        this.subscriptions.unsubscribe();
    }
    goToPreviousCanvasGroup() {
        this.viewerService.goToPreviousCanvasGroup();
    }
    goToNextCanvasGroup() {
        this.viewerService.goToNextCanvasGroup();
    }
    isOnFirstCanvasGroup(currentCanvasGroupIndex) {
        return currentCanvasGroupIndex === 0;
    }
    isOnLastCanvasGroup(currentCanvasGroupIndex) {
        return currentCanvasGroupIndex === this.numberOfCanvasGroups - 1;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.0", ngImport: i0, type: OsdToolbarComponent, deps: [{ token: i1.MimeViewerIntl }, { token: i2.BreakpointObserver }, { token: i0.ChangeDetectorRef }, { token: i3.ViewerService }, { token: i4.CanvasService }, { token: i5.IiifManifestService }, { token: i6.ModeService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.0", type: OsdToolbarComponent, selector: "mime-osd-toolbar", viewQueries: [{ propertyName: "container", first: true, predicate: ["container"], descendants: true, static: true }], ngImport: i0, template: "<div #container class=\"osd-toolbar\">\n  <div *ngIf=\"isWeb\" class=\"flex gap-2\">\n    <div class=\"flex flex-col gap-2\">\n      <button\n        mat-fab\n        aria-controls=\"osdControls\"\n        data-testid=\"fabButton\"\n        [attr.aria-expanded]=\"fabState === 'open'\"\n        [attr.aria-label]=\"\n          fabState === 'open'\n            ? intl.closeOsdControlPanelLabel\n            : intl.openOsdControlPanelLabel\n        \"\n        [matTooltip]=\"\n          fabState === 'open'\n            ? intl.closeOsdControlPanelLabel\n            : intl.openOsdControlPanelLabel\n        \"\n        (click)=\"toggleFab()\"\n      >\n        <mat-icon [@rotate45]=\"fabState\">{{ fabIcon }}</mat-icon>\n      </button>\n    </div>\n    <div id=\"osdControls\" class=\"flex items-center gap-2\">\n      <ng-container *ngIf=\"invert\">\n        <button\n          *ngIf=\"showControlButtons\"\n          data-testid=\"navigateBeforeButton\"\n          mat-mini-fab\n          [attr.aria-label]=\"intl.previousPageLabel\"\n          [matTooltip]=\"intl.previousPageLabel\"\n          [disabled]=\"isFirstCanvasGroup\"\n          [@easeInWithDelay]=\"{\n            value: '',\n            params: { delayEnter: 0, delayLeave: baseAnimationDelay * 5 }\n          }\"\n          (click)=\"goToPreviousCanvasGroup()\"\n        >\n          <mat-icon>navigate_before</mat-icon>\n        </button>\n      </ng-container>\n      <ng-container *ngIf=\"!invert\">\n        <button\n          *ngIf=\"showControlButtons\"\n          data-testid=\"navigateNextButton\"\n          mat-mini-fab\n          [attr.aria-label]=\"intl.nextPageLabel\"\n          [matTooltip]=\"intl.nextPageLabel\"\n          [disabled]=\"isLastCanvasGroup\"\n          [@easeInWithDelay]=\"{\n            value: '',\n            params: { delayEnter: 0, delayLeave: baseAnimationDelay * 5 }\n          }\"\n          (click)=\"goToNextCanvasGroup()\"\n        >\n          <mat-icon>navigate_before</mat-icon>\n        </button>\n      </ng-container>\n      <ng-container *ngIf=\"invert\">\n        <button\n          *ngIf=\"showControlButtons\"\n          data-testid=\"navigateNextButton\"\n          mat-mini-fab\n          [attr.aria-label]=\"intl.nextPageLabel\"\n          [matTooltip]=\"intl.nextPageLabel\"\n          [disabled]=\"isLastCanvasGroup\"\n          [@easeInWithDelay]=\"{\n            value: '',\n            params: {\n              delayEnter: baseAnimationDelay,\n              delayLeave: baseAnimationDelay * 4\n            }\n          }\"\n          (click)=\"goToNextCanvasGroup()\"\n        >\n          <mat-icon>navigate_next</mat-icon>\n        </button>\n      </ng-container>\n      <ng-container *ngIf=\"!invert\">\n        <button\n          *ngIf=\"showControlButtons\"\n          data-testid=\"navigateBeforeButton\"\n          mat-mini-fab\n          [attr.aria-label]=\"intl.previousPageLabel\"\n          [matTooltip]=\"intl.previousPageLabel\"\n          [disabled]=\"isFirstCanvasGroup\"\n          [@easeInWithDelay]=\"{\n            value: '',\n            params: {\n              delayEnter: baseAnimationDelay,\n              delayLeave: baseAnimationDelay * 4\n            }\n          }\"\n          (click)=\"goToPreviousCanvasGroup()\"\n        >\n          <mat-icon>navigate_next</mat-icon>\n        </button>\n      </ng-container>\n      <button\n        *ngIf=\"showControlButtons\"\n        (click)=\"zoomIn()\"\n        data-testid=\"zoomInButton\"\n        mat-mini-fab\n        [attr.aria-label]=\"intl.zoomInLabel\"\n        [matTooltip]=\"intl.zoomInLabel\"\n        [@easeInWithDelay]=\"{\n          value: '',\n          params: {\n            delayEnter: baseAnimationDelay * 2,\n            delayLeave: baseAnimationDelay * 3\n          }\n        }\"\n      >\n        <mat-icon>zoom_in</mat-icon>\n      </button>\n      <button\n        *ngIf=\"showControlButtons\"\n        (click)=\"home()\"\n        data-testid=\"homeButton\"\n        mat-mini-fab\n        [attr.aria-label]=\"intl.resetZoomLabel\"\n        [disabled]=\"!isZoomed\"\n        [matTooltip]=\"intl.resetZoomLabel\"\n        [@easeInWithDelay]=\"{\n          value: '',\n          params: {\n            delayEnter: baseAnimationDelay * 3,\n            delayLeave: baseAnimationDelay * 2\n          }\n        }\"\n      >\n        <mat-icon>home</mat-icon>\n      </button>\n      <button\n        *ngIf=\"showControlButtons\"\n        (click)=\"zoomOut()\"\n        data-testid=\"zoomOutButton\"\n        mat-mini-fab\n        [attr.aria-label]=\"intl.zoomOutLabel\"\n        [matTooltip]=\"intl.zoomOutLabel\"\n        [@easeInWithDelay]=\"{\n          value: '',\n          params: {\n            delayEnter: baseAnimationDelay * 4,\n            delayLeave: baseAnimationDelay\n          }\n        }\"\n      >\n        <mat-icon>zoom_out</mat-icon>\n      </button>\n      <button\n        *ngIf=\"showControlButtons\"\n        (click)=\"rotate()\"\n        data-testid=\"rotateButton\"\n        mat-mini-fab\n        [attr.aria-label]=\"intl.rotateCwLabel\"\n        [matTooltip]=\"intl.rotateCwLabel\"\n        [@easeInWithDelay]=\"{\n          value: '',\n          params: { delayEnter: baseAnimationDelay * 5, delayLeave: 0 }\n        }\"\n      >\n        <mat-icon>rotate_right</mat-icon>\n      </button>\n    </div>\n  </div>\n</div>\n", styles: [":host{z-index:2}.osd-toolbar{position:absolute;background:transparent;width:auto;border-radius:8px;margin:8px 0 0 8px}\n"], dependencies: [{ kind: "directive", type: i7.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i8.MatMiniFabButton, selector: "button[mat-mini-fab]", exportAs: ["matButton"] }, { kind: "component", type: i8.MatFabButton, selector: "button[mat-fab]", inputs: ["extended"], exportAs: ["matButton"] }, { kind: "component", type: i9.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: i10.MatTooltip, selector: "[matTooltip]", inputs: ["matTooltipPosition", "matTooltipPositionAtOrigin", "matTooltipDisabled", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipTouchGestures", "matTooltip", "matTooltipClass"], exportAs: ["matTooltip"] }], animations: [rotate45, easeInWithDelay], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.0", ngImport: i0, type: OsdToolbarComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mime-osd-toolbar', changeDetection: ChangeDetectionStrategy.OnPush, animations: [rotate45, easeInWithDelay], template: "<div #container class=\"osd-toolbar\">\n  <div *ngIf=\"isWeb\" class=\"flex gap-2\">\n    <div class=\"flex flex-col gap-2\">\n      <button\n        mat-fab\n        aria-controls=\"osdControls\"\n        data-testid=\"fabButton\"\n        [attr.aria-expanded]=\"fabState === 'open'\"\n        [attr.aria-label]=\"\n          fabState === 'open'\n            ? intl.closeOsdControlPanelLabel\n            : intl.openOsdControlPanelLabel\n        \"\n        [matTooltip]=\"\n          fabState === 'open'\n            ? intl.closeOsdControlPanelLabel\n            : intl.openOsdControlPanelLabel\n        \"\n        (click)=\"toggleFab()\"\n      >\n        <mat-icon [@rotate45]=\"fabState\">{{ fabIcon }}</mat-icon>\n      </button>\n    </div>\n    <div id=\"osdControls\" class=\"flex items-center gap-2\">\n      <ng-container *ngIf=\"invert\">\n        <button\n          *ngIf=\"showControlButtons\"\n          data-testid=\"navigateBeforeButton\"\n          mat-mini-fab\n          [attr.aria-label]=\"intl.previousPageLabel\"\n          [matTooltip]=\"intl.previousPageLabel\"\n          [disabled]=\"isFirstCanvasGroup\"\n          [@easeInWithDelay]=\"{\n            value: '',\n            params: { delayEnter: 0, delayLeave: baseAnimationDelay * 5 }\n          }\"\n          (click)=\"goToPreviousCanvasGroup()\"\n        >\n          <mat-icon>navigate_before</mat-icon>\n        </button>\n      </ng-container>\n      <ng-container *ngIf=\"!invert\">\n        <button\n          *ngIf=\"showControlButtons\"\n          data-testid=\"navigateNextButton\"\n          mat-mini-fab\n          [attr.aria-label]=\"intl.nextPageLabel\"\n          [matTooltip]=\"intl.nextPageLabel\"\n          [disabled]=\"isLastCanvasGroup\"\n          [@easeInWithDelay]=\"{\n            value: '',\n            params: { delayEnter: 0, delayLeave: baseAnimationDelay * 5 }\n          }\"\n          (click)=\"goToNextCanvasGroup()\"\n        >\n          <mat-icon>navigate_before</mat-icon>\n        </button>\n      </ng-container>\n      <ng-container *ngIf=\"invert\">\n        <button\n          *ngIf=\"showControlButtons\"\n          data-testid=\"navigateNextButton\"\n          mat-mini-fab\n          [attr.aria-label]=\"intl.nextPageLabel\"\n          [matTooltip]=\"intl.nextPageLabel\"\n          [disabled]=\"isLastCanvasGroup\"\n          [@easeInWithDelay]=\"{\n            value: '',\n            params: {\n              delayEnter: baseAnimationDelay,\n              delayLeave: baseAnimationDelay * 4\n            }\n          }\"\n          (click)=\"goToNextCanvasGroup()\"\n        >\n          <mat-icon>navigate_next</mat-icon>\n        </button>\n      </ng-container>\n      <ng-container *ngIf=\"!invert\">\n        <button\n          *ngIf=\"showControlButtons\"\n          data-testid=\"navigateBeforeButton\"\n          mat-mini-fab\n          [attr.aria-label]=\"intl.previousPageLabel\"\n          [matTooltip]=\"intl.previousPageLabel\"\n          [disabled]=\"isFirstCanvasGroup\"\n          [@easeInWithDelay]=\"{\n            value: '',\n            params: {\n              delayEnter: baseAnimationDelay,\n              delayLeave: baseAnimationDelay * 4\n            }\n          }\"\n          (click)=\"goToPreviousCanvasGroup()\"\n        >\n          <mat-icon>navigate_next</mat-icon>\n        </button>\n      </ng-container>\n      <button\n        *ngIf=\"showControlButtons\"\n        (click)=\"zoomIn()\"\n        data-testid=\"zoomInButton\"\n        mat-mini-fab\n        [attr.aria-label]=\"intl.zoomInLabel\"\n        [matTooltip]=\"intl.zoomInLabel\"\n        [@easeInWithDelay]=\"{\n          value: '',\n          params: {\n            delayEnter: baseAnimationDelay * 2,\n            delayLeave: baseAnimationDelay * 3\n          }\n        }\"\n      >\n        <mat-icon>zoom_in</mat-icon>\n      </button>\n      <button\n        *ngIf=\"showControlButtons\"\n        (click)=\"home()\"\n        data-testid=\"homeButton\"\n        mat-mini-fab\n        [attr.aria-label]=\"intl.resetZoomLabel\"\n        [disabled]=\"!isZoomed\"\n        [matTooltip]=\"intl.resetZoomLabel\"\n        [@easeInWithDelay]=\"{\n          value: '',\n          params: {\n            delayEnter: baseAnimationDelay * 3,\n            delayLeave: baseAnimationDelay * 2\n          }\n        }\"\n      >\n        <mat-icon>home</mat-icon>\n      </button>\n      <button\n        *ngIf=\"showControlButtons\"\n        (click)=\"zoomOut()\"\n        data-testid=\"zoomOutButton\"\n        mat-mini-fab\n        [attr.aria-label]=\"intl.zoomOutLabel\"\n        [matTooltip]=\"intl.zoomOutLabel\"\n        [@easeInWithDelay]=\"{\n          value: '',\n          params: {\n            delayEnter: baseAnimationDelay * 4,\n            delayLeave: baseAnimationDelay\n          }\n        }\"\n      >\n        <mat-icon>zoom_out</mat-icon>\n      </button>\n      <button\n        *ngIf=\"showControlButtons\"\n        (click)=\"rotate()\"\n        data-testid=\"rotateButton\"\n        mat-mini-fab\n        [attr.aria-label]=\"intl.rotateCwLabel\"\n        [matTooltip]=\"intl.rotateCwLabel\"\n        [@easeInWithDelay]=\"{\n          value: '',\n          params: { delayEnter: baseAnimationDelay * 5, delayLeave: 0 }\n        }\"\n      >\n        <mat-icon>rotate_right</mat-icon>\n      </button>\n    </div>\n  </div>\n</div>\n", styles: [":host{z-index:2}.osd-toolbar{position:absolute;background:transparent;width:auto;border-radius:8px;margin:8px 0 0 8px}\n"] }]
        }], ctorParameters: () => [{ type: i1.MimeViewerIntl }, { type: i2.BreakpointObserver }, { type: i0.ChangeDetectorRef }, { type: i3.ViewerService }, { type: i4.CanvasService }, { type: i5.IiifManifestService }, { type: i6.ModeService }], propDecorators: { container: [{
                type: ViewChild,
                args: ['container', { static: true }]
            }] } });
//# sourceMappingURL=data:application/json;base64,