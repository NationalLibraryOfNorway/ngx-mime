import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, } from '@angular/core';
import { Subscription } from 'rxjs';
import { CanvasService } from '../../../core/canvas-service/canvas-service';
import { IiifContentSearchService } from '../../../core/iiif-content-search-service/iiif-content-search.service';
import { IiifManifestService } from '../../../core/iiif-manifest-service/iiif-manifest-service';
import { MimeViewerIntl } from '../../../core/intl';
import { SearchResult } from '../../../core/models/search-result';
import { ViewingDirection } from '../../../core/models/viewing-direction';
import { ContentSearchNavigationService } from '../../../core/navigation/content-search-navigation-service/content-search-navigation.service';
import * as i0 from "@angular/core";
import * as i1 from "../../../core/intl";
import * as i2 from "../../../core/canvas-service/canvas-service";
import * as i3 from "../../../core/iiif-content-search-service/iiif-content-search.service";
import * as i4 from "../../../core/navigation/content-search-navigation-service/content-search-navigation.service";
import * as i5 from "../../../core/iiif-manifest-service/iiif-manifest-service";
import * as i6 from "@angular/common";
import * as i7 from "@angular/material/toolbar";
import * as i8 from "@angular/material/button";
import * as i9 from "@angular/material/icon";
import * as i10 from "@angular/material/tooltip";
export class ContentSearchNavigatorComponent {
    constructor(intl, changeDetectorRef, canvasService, iiifContentSearchService, contentSearchNavigationService, iiifManifestService) {
        this.intl = intl;
        this.changeDetectorRef = changeDetectorRef;
        this.canvasService = canvasService;
        this.iiifContentSearchService = iiifContentSearchService;
        this.contentSearchNavigationService = contentSearchNavigationService;
        this.iiifManifestService = iiifManifestService;
        this.isHitOnActiveCanvasGroup = false;
        this.isFirstHit = false;
        this.isLastHit = false;
        this.currentHit = 0;
        this.invert = false;
        this.subscriptions = new Subscription();
    }
    ngOnInit() {
        this.contentSearchNavigationService.initialize();
        this.subscriptions.add(this.contentSearchNavigationService.currentHitCounter.subscribe((n) => {
            this.currentHit = n;
            this.updateHitStatus();
        }));
        this.subscriptions.add(this.iiifManifestService.currentManifest.subscribe((manifest) => {
            if (manifest) {
                this.invert = manifest.viewingDirection === ViewingDirection.LTR;
                this.changeDetectorRef.detectChanges();
            }
        }));
        this.subscriptions.add(this.intl.changes.subscribe(() => this.changeDetectorRef.markForCheck()));
        this.subscriptions.add(this.canvasService.onCanvasGroupIndexChange.subscribe((canvasGroupIndex) => {
            this.contentSearchNavigationService.update(canvasGroupIndex);
            this.isHitOnActiveCanvasGroup =
                this.contentSearchNavigationService.getHitOnActiveCanvasGroup();
            this.changeDetectorRef.detectChanges();
        }));
    }
    ngOnChanges(changes) {
        this.updateHitStatus();
    }
    ngOnDestroy() {
        this.subscriptions.unsubscribe();
        this.contentSearchNavigationService.destroy();
    }
    clear() {
        this.iiifContentSearchService.destroy();
    }
    goToNextHit() {
        this.contentSearchNavigationService.goToNextHit();
    }
    goToPreviousHit() {
        this.contentSearchNavigationService.goToPreviousHit();
    }
    updateHitStatus() {
        this.isFirstHit = this.currentHit <= 0;
        this.isLastHit = this.currentHit === this.searchResult.size() - 1;
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.0", ngImport: i0, type: ContentSearchNavigatorComponent, deps: [{ token: i1.MimeViewerIntl }, { token: i0.ChangeDetectorRef }, { token: i2.CanvasService }, { token: i3.IiifContentSearchService }, { token: i4.ContentSearchNavigationService }, { token: i5.IiifManifestService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.0", type: ContentSearchNavigatorComponent, selector: "mime-content-search-navigator", inputs: { searchResult: "searchResult" }, usesOnChanges: true, ngImport: i0, template: "<mat-toolbar\n  *ngIf=\"searchResult\"\n  class=\"content-search-navigator-toolbar min-w-[275px]\"\n  color=\"primary\"\n>\n  <button\n    data-testid=\"footerNavigateCloseHitsButton\"\n    mat-icon-button\n    [attr.aria-label]=\"intl.closeLabel\"\n    [matTooltip]=\"intl.closeLabel\"\n    matTooltipPosition=\"above\"\n    (click)=\"clear()\"\n  >\n    <mat-icon>close</mat-icon>\n  </button>\n  <div\n    class=\"current-hit-label grow\"\n    [ngClass]=\"{ 'not-on-page': !isHitOnActiveCanvasGroup }\"\n    [innerHTML]=\"intl.currentHitLabel(currentHit + 1, searchResult.size())\"\n  ></div>\n  <div class=\"navigation-buttons\">\n    <ng-container *ngIf=\"invert\">\n      <button\n        data-testid=\"footerNavigatePreviousHitButton\"\n        mat-icon-button\n        [attr.aria-label]=\"intl.previousHitLabel\"\n        [matTooltip]=\"intl.previousHitLabel\"\n        matTooltipPosition=\"above\"\n        [disabled]=\"isFirstHit\"\n        (click)=\"goToPreviousHit()\"\n      >\n        <mat-icon>navigate_before</mat-icon>\n      </button>\n      <button\n        data-testid=\"footerNavigateNextHitButton\"\n        mat-icon-button\n        [attr.aria-label]=\"intl.nextHitLabel\"\n        [matTooltip]=\"intl.nextHitLabel\"\n        matTooltipPosition=\"above\"\n        [disabled]=\"isLastHit\"\n        (click)=\"goToNextHit()\"\n      >\n        <mat-icon>navigate_next</mat-icon>\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"!invert\">\n      <button\n        data-testid=\"footerNavigateNextHitButton\"\n        mat-icon-button\n        [attr.aria-label]=\"intl.nextHitLabel\"\n        [matTooltip]=\"intl.nextHitLabel\"\n        matTooltipPosition=\"above\"\n        [disabled]=\"isLastHit\"\n        (click)=\"goToNextHit()\"\n      >\n        <mat-icon>navigate_before</mat-icon>\n      </button>\n      <button\n        data-testid=\"footerNavigatePreviousHitButton\"\n        mat-icon-button\n        [attr.aria-label]=\"intl.previousHitLabel\"\n        [matTooltip]=\"intl.previousHitLabel\"\n        matTooltipPosition=\"above\"\n        [disabled]=\"isFirstHit\"\n        (click)=\"goToPreviousHit()\"\n      >\n        <mat-icon>navigate_next</mat-icon>\n      </button>\n    </ng-container>\n  </div>\n</mat-toolbar>\n", styles: [".current-hit-label{font-size:13px;text-align:center}.not-on-page{opacity:.6}\n"], dependencies: [{ kind: "directive", type: i6.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "component", type: i7.MatToolbar, selector: "mat-toolbar", inputs: ["color"], exportAs: ["matToolbar"] }, { kind: "component", type: i8.MatIconButton, selector: "button[mat-icon-button]", exportAs: ["matButton"] }, { kind: "component", type: i9.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: i10.MatTooltip, selector: "[matTooltip]", inputs: ["matTooltipPosition", "matTooltipPositionAtOrigin", "matTooltipDisabled", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipTouchGestures", "matTooltip", "matTooltipClass"], exportAs: ["matTooltip"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.0", ngImport: i0, type: ContentSearchNavigatorComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mime-content-search-navigator', changeDetection: ChangeDetectionStrategy.OnPush, template: "<mat-toolbar\n  *ngIf=\"searchResult\"\n  class=\"content-search-navigator-toolbar min-w-[275px]\"\n  color=\"primary\"\n>\n  <button\n    data-testid=\"footerNavigateCloseHitsButton\"\n    mat-icon-button\n    [attr.aria-label]=\"intl.closeLabel\"\n    [matTooltip]=\"intl.closeLabel\"\n    matTooltipPosition=\"above\"\n    (click)=\"clear()\"\n  >\n    <mat-icon>close</mat-icon>\n  </button>\n  <div\n    class=\"current-hit-label grow\"\n    [ngClass]=\"{ 'not-on-page': !isHitOnActiveCanvasGroup }\"\n    [innerHTML]=\"intl.currentHitLabel(currentHit + 1, searchResult.size())\"\n  ></div>\n  <div class=\"navigation-buttons\">\n    <ng-container *ngIf=\"invert\">\n      <button\n        data-testid=\"footerNavigatePreviousHitButton\"\n        mat-icon-button\n        [attr.aria-label]=\"intl.previousHitLabel\"\n        [matTooltip]=\"intl.previousHitLabel\"\n        matTooltipPosition=\"above\"\n        [disabled]=\"isFirstHit\"\n        (click)=\"goToPreviousHit()\"\n      >\n        <mat-icon>navigate_before</mat-icon>\n      </button>\n      <button\n        data-testid=\"footerNavigateNextHitButton\"\n        mat-icon-button\n        [attr.aria-label]=\"intl.nextHitLabel\"\n        [matTooltip]=\"intl.nextHitLabel\"\n        matTooltipPosition=\"above\"\n        [disabled]=\"isLastHit\"\n        (click)=\"goToNextHit()\"\n      >\n        <mat-icon>navigate_next</mat-icon>\n      </button>\n    </ng-container>\n    <ng-container *ngIf=\"!invert\">\n      <button\n        data-testid=\"footerNavigateNextHitButton\"\n        mat-icon-button\n        [attr.aria-label]=\"intl.nextHitLabel\"\n        [matTooltip]=\"intl.nextHitLabel\"\n        matTooltipPosition=\"above\"\n        [disabled]=\"isLastHit\"\n        (click)=\"goToNextHit()\"\n      >\n        <mat-icon>navigate_before</mat-icon>\n      </button>\n      <button\n        data-testid=\"footerNavigatePreviousHitButton\"\n        mat-icon-button\n        [attr.aria-label]=\"intl.previousHitLabel\"\n        [matTooltip]=\"intl.previousHitLabel\"\n        matTooltipPosition=\"above\"\n        [disabled]=\"isFirstHit\"\n        (click)=\"goToPreviousHit()\"\n      >\n        <mat-icon>navigate_next</mat-icon>\n      </button>\n    </ng-container>\n  </div>\n</mat-toolbar>\n", styles: [".current-hit-label{font-size:13px;text-align:center}.not-on-page{opacity:.6}\n"] }]
        }], ctorParameters: () => [{ type: i1.MimeViewerIntl }, { type: i0.ChangeDetectorRef }, { type: i2.CanvasService }, { type: i3.IiifContentSearchService }, { type: i4.ContentSearchNavigationService }, { type: i5.IiifManifestService }], propDecorators: { searchResult: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,