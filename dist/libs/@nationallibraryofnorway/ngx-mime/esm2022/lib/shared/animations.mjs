import { animate, state, style, transition, trigger, } from '@angular/animations';
import { ViewerOptions } from './../core/models/viewer-options';
export const slideInLeft = trigger('slideInLeft', [
    state('hide', style({
        transform: 'translate(-100%, 0)',
        display: 'none',
    })),
    state('show', style({
        transform: 'translate(0px, 0px)',
        display: 'block',
    })),
    transition('hide => show', animate(`${ViewerOptions.transitions.toolbarsEaseInTime}ms ease-out`)),
    transition('show => hide', animate(`${ViewerOptions.transitions.toolbarsEaseOutTime}ms ease-in`)),
]);
export const rotate45 = trigger('rotate45', [
    transition('closed => open', [
        style({ transform: 'rotate(-45deg)', opacity: 0 }),
        animate(`100ms`),
    ]),
    transition('open => closed', [
        style({ transform: 'rotate(45deg)', opacity: 0 }),
        animate(`100ms`),
    ]),
]);
export const easeInWithDelay = trigger('easeInWithDelay', [
    state('void', style({ transform: 'scale(0)' })),
    transition(':enter', animate(`1ms {{delayEnter}}ms ease-out`), {
        params: { delayEnter: 0 },
    }),
    transition(':leave', animate(`1ms {{delayLeave}}ms ease-in`), {
        params: { delayLeave: 0 },
    }),
]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5pbWF0aW9ucy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbmd4LW1pbWUvc3JjL2xpYi9zaGFyZWQvYW5pbWF0aW9ucy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQ0wsT0FBTyxFQUNQLEtBQUssRUFDTCxLQUFLLEVBQ0wsVUFBVSxFQUNWLE9BQU8sR0FDUixNQUFNLHFCQUFxQixDQUFDO0FBQzdCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUVoRSxNQUFNLENBQUMsTUFBTSxXQUFXLEdBQUcsT0FBTyxDQUFDLGFBQWEsRUFBRTtJQUNoRCxLQUFLLENBQ0gsTUFBTSxFQUNOLEtBQUssQ0FBQztRQUNKLFNBQVMsRUFBRSxxQkFBcUI7UUFDaEMsT0FBTyxFQUFFLE1BQU07S0FDaEIsQ0FBQyxDQUNIO0lBQ0QsS0FBSyxDQUNILE1BQU0sRUFDTixLQUFLLENBQUM7UUFDSixTQUFTLEVBQUUscUJBQXFCO1FBQ2hDLE9BQU8sRUFBRSxPQUFPO0tBQ2pCLENBQUMsQ0FDSDtJQUNELFVBQVUsQ0FDUixjQUFjLEVBQ2QsT0FBTyxDQUFDLEdBQUcsYUFBYSxDQUFDLFdBQVcsQ0FBQyxrQkFBa0IsYUFBYSxDQUFDLENBQ3RFO0lBQ0QsVUFBVSxDQUNSLGNBQWMsRUFDZCxPQUFPLENBQUMsR0FBRyxhQUFhLENBQUMsV0FBVyxDQUFDLG1CQUFtQixZQUFZLENBQUMsQ0FDdEU7Q0FDRixDQUFDLENBQUM7QUFFSCxNQUFNLENBQUMsTUFBTSxRQUFRLEdBQUcsT0FBTyxDQUFDLFVBQVUsRUFBRTtJQUMxQyxVQUFVLENBQUMsZ0JBQWdCLEVBQUU7UUFDM0IsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLGdCQUFnQixFQUFFLE9BQU8sRUFBRSxDQUFDLEVBQUUsQ0FBQztRQUNsRCxPQUFPLENBQUMsT0FBTyxDQUFDO0tBQ2pCLENBQUM7SUFDRixVQUFVLENBQUMsZ0JBQWdCLEVBQUU7UUFDM0IsS0FBSyxDQUFDLEVBQUUsU0FBUyxFQUFFLGVBQWUsRUFBRSxPQUFPLEVBQUUsQ0FBQyxFQUFFLENBQUM7UUFDakQsT0FBTyxDQUFDLE9BQU8sQ0FBQztLQUNqQixDQUFDO0NBQ0gsQ0FBQyxDQUFDO0FBRUgsTUFBTSxDQUFDLE1BQU0sZUFBZSxHQUFHLE9BQU8sQ0FBQyxpQkFBaUIsRUFBRTtJQUN4RCxLQUFLLENBQUMsTUFBTSxFQUFFLEtBQUssQ0FBQyxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQUUsQ0FBQyxDQUFDO0lBQy9DLFVBQVUsQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDLCtCQUErQixDQUFDLEVBQUU7UUFDN0QsTUFBTSxFQUFFLEVBQUUsVUFBVSxFQUFFLENBQUMsRUFBRTtLQUMxQixDQUFDO0lBQ0YsVUFBVSxDQUFDLFFBQVEsRUFBRSxPQUFPLENBQUMsOEJBQThCLENBQUMsRUFBRTtRQUM1RCxNQUFNLEVBQUUsRUFBRSxVQUFVLEVBQUUsQ0FBQyxFQUFFO0tBQzFCLENBQUM7Q0FDSCxDQUFDLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBhbmltYXRlLFxuICBzdGF0ZSxcbiAgc3R5bGUsXG4gIHRyYW5zaXRpb24sXG4gIHRyaWdnZXIsXG59IGZyb20gJ0Bhbmd1bGFyL2FuaW1hdGlvbnMnO1xuaW1wb3J0IHsgVmlld2VyT3B0aW9ucyB9IGZyb20gJy4vLi4vY29yZS9tb2RlbHMvdmlld2VyLW9wdGlvbnMnO1xuXG5leHBvcnQgY29uc3Qgc2xpZGVJbkxlZnQgPSB0cmlnZ2VyKCdzbGlkZUluTGVmdCcsIFtcbiAgc3RhdGUoXG4gICAgJ2hpZGUnLFxuICAgIHN0eWxlKHtcbiAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZSgtMTAwJSwgMCknLFxuICAgICAgZGlzcGxheTogJ25vbmUnLFxuICAgIH0pXG4gICksXG4gIHN0YXRlKFxuICAgICdzaG93JyxcbiAgICBzdHlsZSh7XG4gICAgICB0cmFuc2Zvcm06ICd0cmFuc2xhdGUoMHB4LCAwcHgpJyxcbiAgICAgIGRpc3BsYXk6ICdibG9jaycsXG4gICAgfSlcbiAgKSxcbiAgdHJhbnNpdGlvbihcbiAgICAnaGlkZSA9PiBzaG93JyxcbiAgICBhbmltYXRlKGAke1ZpZXdlck9wdGlvbnMudHJhbnNpdGlvbnMudG9vbGJhcnNFYXNlSW5UaW1lfW1zIGVhc2Utb3V0YClcbiAgKSxcbiAgdHJhbnNpdGlvbihcbiAgICAnc2hvdyA9PiBoaWRlJyxcbiAgICBhbmltYXRlKGAke1ZpZXdlck9wdGlvbnMudHJhbnNpdGlvbnMudG9vbGJhcnNFYXNlT3V0VGltZX1tcyBlYXNlLWluYClcbiAgKSxcbl0pO1xuXG5leHBvcnQgY29uc3Qgcm90YXRlNDUgPSB0cmlnZ2VyKCdyb3RhdGU0NScsIFtcbiAgdHJhbnNpdGlvbignY2xvc2VkID0+IG9wZW4nLCBbXG4gICAgc3R5bGUoeyB0cmFuc2Zvcm06ICdyb3RhdGUoLTQ1ZGVnKScsIG9wYWNpdHk6IDAgfSksXG4gICAgYW5pbWF0ZShgMTAwbXNgKSxcbiAgXSksXG4gIHRyYW5zaXRpb24oJ29wZW4gPT4gY2xvc2VkJywgW1xuICAgIHN0eWxlKHsgdHJhbnNmb3JtOiAncm90YXRlKDQ1ZGVnKScsIG9wYWNpdHk6IDAgfSksXG4gICAgYW5pbWF0ZShgMTAwbXNgKSxcbiAgXSksXG5dKTtcblxuZXhwb3J0IGNvbnN0IGVhc2VJbldpdGhEZWxheSA9IHRyaWdnZXIoJ2Vhc2VJbldpdGhEZWxheScsIFtcbiAgc3RhdGUoJ3ZvaWQnLCBzdHlsZSh7IHRyYW5zZm9ybTogJ3NjYWxlKDApJyB9KSksXG4gIHRyYW5zaXRpb24oJzplbnRlcicsIGFuaW1hdGUoYDFtcyB7e2RlbGF5RW50ZXJ9fW1zIGVhc2Utb3V0YCksIHtcbiAgICBwYXJhbXM6IHsgZGVsYXlFbnRlcjogMCB9LFxuICB9KSxcbiAgdHJhbnNpdGlvbignOmxlYXZlJywgYW5pbWF0ZShgMW1zIHt7ZGVsYXlMZWF2ZX19bXMgZWFzZS1pbmApLCB7XG4gICAgcGFyYW1zOiB7IGRlbGF5TGVhdmU6IDAgfSxcbiAgfSksXG5dKTtcbiJdfQ==