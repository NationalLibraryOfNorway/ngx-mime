import { BreakpointObserver, Breakpoints, } from '@angular/cdk/layout';
import { ChangeDetectorRef, Component, ElementRef, QueryList, ViewChild, ViewChildren, } from '@angular/core';
import { MatDialogRef } from '@angular/material/dialog';
import { Subscription } from 'rxjs';
import { take } from 'rxjs/operators';
import { ContentSearchNavigationService } from '../core/navigation/content-search-navigation-service/content-search-navigation.service';
import { IiifContentSearchService } from './../core/iiif-content-search-service/iiif-content-search.service';
import { IiifManifestService } from './../core/iiif-manifest-service/iiif-manifest-service';
import { MimeViewerIntl } from './../core/intl';
import { MimeResizeService } from './../core/mime-resize-service/mime-resize.service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
import * as i2 from "./../core/intl";
import * as i3 from "@angular/cdk/layout";
import * as i4 from "./../core/mime-resize-service/mime-resize.service";
import * as i5 from "./../core/iiif-manifest-service/iiif-manifest-service";
import * as i6 from "./../core/iiif-content-search-service/iiif-content-search.service";
import * as i7 from "../core/navigation/content-search-navigation-service/content-search-navigation.service";
import * as i8 from "@angular/common";
import * as i9 from "@angular/forms";
import * as i10 from "@angular/material/toolbar";
import * as i11 from "@angular/material/button";
import * as i12 from "@angular/material/icon";
import * as i13 from "@angular/material/tooltip";
import * as i14 from "@angular/material/divider";
import * as i15 from "@angular/material/input";
import * as i16 from "@angular/material/form-field";
import * as i17 from "@angular/material/progress-bar";
export class ContentSearchDialogComponent {
    constructor(dialogRef, intl, breakpointObserver, cdr, mimeResizeService, iiifManifestService, iiifContentSearchService, contentSearchNavigationService) {
        this.dialogRef = dialogRef;
        this.intl = intl;
        this.breakpointObserver = breakpointObserver;
        this.cdr = cdr;
        this.mimeResizeService = mimeResizeService;
        this.iiifManifestService = iiifManifestService;
        this.iiifContentSearchService = iiifContentSearchService;
        this.contentSearchNavigationService = contentSearchNavigationService;
        this.q = '';
        this.hits = [];
        this.currentHit = null;
        this.currentSearch = null;
        this.numberOfHits = 0;
        this.isSearching = false;
        this.tabHeight = { maxHeight: '100px' };
        this.isHandsetOrTabletInPortrait = false;
        this.manifest = null;
        this.mimeHeight = 0;
        this.subscriptions = new Subscription();
    }
    ngOnInit() {
        this.subscriptions.add(this.breakpointObserver
            .observe([Breakpoints.Handset, Breakpoints.TabletPortrait])
            .subscribe((value) => (this.isHandsetOrTabletInPortrait = value.matches)));
        this.subscriptions.add(this.mimeResizeService.onResize.subscribe((dimensions) => {
            this.mimeHeight = dimensions.height;
            this.resizeTabHeight();
        }));
        this.subscriptions.add(this.iiifManifestService.currentManifest.subscribe((manifest) => {
            this.manifest = manifest;
        }));
        this.subscriptions.add(this.iiifContentSearchService.onChange.subscribe((sr) => {
            this.hits = sr.hits;
            this.currentSearch = sr.q ? sr.q : '';
            this.q = sr.q;
            this.numberOfHits = sr.size();
            if (this.resultContainer !== null && this.numberOfHits > 0) {
                this.resultContainer.nativeElement.focus();
            }
            else if (this.q.length === 0 || this.numberOfHits === 0) {
                this.qEl.nativeElement.focus();
            }
        }));
        this.subscriptions.add(this.iiifContentSearchService.isSearching.subscribe((s) => {
            this.isSearching = s;
        }));
        this.subscriptions.add(this.iiifContentSearchService.onSelected.subscribe((hit) => {
            if (hit === null) {
                this.currentHit = hit;
            }
            else {
                if (!this.currentHit || this.currentHit.id !== hit.id) {
                    this.currentHit = hit;
                    this.scrollCurrentHitIntoView();
                }
            }
        }));
        this.resizeTabHeight();
    }
    ngAfterViewInit() {
        this.scrollCurrentHitIntoView();
    }
    ngOnDestroy() {
        this.subscriptions.unsubscribe();
    }
    onSubmit(event) {
        event.preventDefault();
        this.search();
    }
    clear() {
        this.q = '';
        this.search();
    }
    goToHit(hit) {
        this.currentHit = hit;
        this.contentSearchNavigationService.selected(hit);
        if (this.isHandsetOrTabletInPortrait) {
            this.dialogRef.close();
        }
    }
    search() {
        this.currentSearch = this.q;
        if (this.manifest) {
            this.iiifContentSearchService.search(this.manifest, this.q);
        }
    }
    resizeTabHeight() {
        let height = this.mimeHeight;
        if (this.isHandsetOrTabletInPortrait) {
            this.tabHeight = {
                maxHeight: window.innerHeight - 128 + 'px',
            };
        }
        else {
            height -= 272;
            this.tabHeight = {
                maxHeight: height + 'px',
            };
        }
        this.cdr.detectChanges();
    }
    scrollCurrentHitIntoView() {
        this.iiifContentSearchService.onSelected
            .pipe(take(1))
            .subscribe((hit) => {
            if (hit !== null) {
                const selected = this.findSelected(hit);
                if (selected) {
                    selected.nativeElement.focus();
                }
            }
        });
    }
    findSelected(selectedHit) {
        if (this.hitList) {
            const selectedList = this.hitList.filter((item, index) => index === selectedHit.id);
            return selectedList.length > 0 ? selectedList[0] : null;
        }
        else {
            return null;
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.1.0", ngImport: i0, type: ContentSearchDialogComponent, deps: [{ token: i1.MatDialogRef }, { token: i2.MimeViewerIntl }, { token: i3.BreakpointObserver }, { token: i0.ChangeDetectorRef }, { token: i4.MimeResizeService }, { token: i5.IiifManifestService }, { token: i6.IiifContentSearchService }, { token: i7.ContentSearchNavigationService }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "17.1.0", type: ContentSearchDialogComponent, selector: "mime-search", viewQueries: [{ propertyName: "resultContainer", first: true, predicate: ["contentSearchResult"], descendants: true, static: true }, { propertyName: "qEl", first: true, predicate: ["query"], descendants: true, static: true }, { propertyName: "hitList", predicate: ["hitButton"], descendants: true, read: ElementRef }], ngImport: i0, template: "<div class=\"content-search-container\">\n  <ng-container [ngSwitch]=\"isHandsetOrTabletInPortrait\">\n    <mat-toolbar *ngSwitchCase=\"true\" color=\"primary\">\n      <button\n        mat-icon-button\n        class=\"close-content-search-dialog-button\"\n        [aria-label]=\"intl.closeLabel\"\n        [matTooltip]=\"intl.closeLabel\"\n        [matDialogClose]=\"true\"\n      >\n        <mat-icon>close</mat-icon>\n      </button>\n      <h1 mat-dialog-title class=\"heading\">{{ intl.searchLabel }}</h1>\n    </mat-toolbar>\n    <mat-toolbar *ngSwitchDefault class=\"justify-between\">\n      <h1 mat-dialog-title class=\"heading heading-desktop\">{{\n        intl.searchLabel\n      }}</h1>\n      <button\n        mat-icon-button\n        class=\"close-content-search-dialog-button\"\n        [aria-label]=\"intl.closeLabel\"\n        [matTooltip]=\"intl.closeLabel\"\n        [matDialogClose]=\"true\"\n      >\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-toolbar>\n  </ng-container>\n  <mat-dialog-content class=\"content-search-form\">\n    <form (ngSubmit)=\"onSubmit($event)\" #searchForm=\"ngForm\">\n      <mat-form-field class=\"content-search-box\">\n        <button\n          type=\"submit\"\n          matPrefix\n          mat-icon-button\n          [attr.aria-label]=\"intl.searchLabel\"\n          [matTooltip]=\"intl.searchLabel\"\n        >\n          <mat-icon class=\"icon\">search</mat-icon>\n        </button>\n        <input\n          #query\n          cdkFocusInitial\n          matInput\n          class=\"content-search-input\"\n          [(ngModel)]=\"q\"\n          [attr.aria-label]=\"intl.searchLabel\"\n          name=\"q\"\n          autocomplete=\"off\"\n        />\n        <button\n          *ngIf=\"q\"\n          type=\"button\"\n          class=\"clearSearchButton\"\n          matSuffix\n          mat-icon-button\n          [attr.aria-label]=\"intl.clearSearchLabel\"\n          [matTooltip]=\"intl.clearSearchLabel\"\n          [disabled]=\"isSearching\"\n          (click)=\"clear()\"\n        >\n          <mat-icon class=\"icon\">clear</mat-icon>\n        </button>\n      </mat-form-field>\n    </form>\n    <div\n      #contentSearchResult\n      class=\"content-search-result-container\"\n      [ngStyle]=\"tabHeight\"\n    >\n      <div class=\"content-search-result\">\n        <ng-container *ngIf=\"!isSearching\">\n          <input type=\"hidden\" class=\"numberOfHits\" [value]=\"numberOfHits\" />\n          <ng-container *ngIf=\"currentSearch && currentSearch.length > 0\">\n            <div\n              *ngIf=\"numberOfHits > 0\"\n              [innerHTML]=\"intl.resultsFoundLabel(numberOfHits, currentSearch)\"\n            ></div>\n            <div\n              *ngIf=\"numberOfHits === 0\"\n              [innerHTML]=\"intl.noResultsFoundLabel(currentSearch)\"\n            ></div>\n          </ng-container>\n          <ng-container *ngFor=\"let hit of hits; let last = last\">\n            <button\n              #hitButton\n              mat-button\n              [color]=\"currentHit && hit.id === currentHit.id ? 'accent' : null\"\n              [ngClass]=\"'hit'\"\n              (click)=\"goToHit(hit)\"\n              (keydown.enter)=\"goToHit(hit)\"\n            >\n              <div class=\"flex items-start justify-between\">\n                <div class=\"summary\"\n                  >{{ hit.before }} <em>{{ hit.match }}</em>\n                  {{ hit.after }}</div\n                >\n                <div class=\"canvasGroup ml-2\">{{ hit.index + 1 }}</div>\n              </div>\n            </button>\n            <mat-divider *ngIf=\"!last\"></mat-divider>\n          </ng-container>\n        </ng-container>\n        <mat-progress-bar\n          *ngIf=\"isSearching\"\n          mode=\"indeterminate\"\n        ></mat-progress-bar>\n      </div>\n    </div>\n  </mat-dialog-content>\n</div>\n", styles: [".content-search-container .mat-mdc-dialog-title{color:inherit;padding:0 2px 16px}.content-search-container ::ng-deep mat-form-field .mdc-text-field{background:transparent!important}.content-search-container .content-search-box{width:100%}.content-search-container .content-search-input{font-size:20px}.content-search-container .content-search-result-container{overflow:auto;margin-bottom:8px}.content-search-container .content-search-result{padding:8px 16px}.content-search-container .content-search-result .mat-mdc-button{line-height:initial;height:auto;white-space:initial;word-wrap:initial;max-width:none;padding:8px 0;text-align:left;font-size:14px}.content-search-container ::ng-deep .current-content-search{font-weight:700}.content-search-container em{font-weight:700}.content-search-container .canvasGroupLabel{text-align:right;opacity:.54}.content-search-container .mat-mdc-dialog-content{max-height:none;padding:8px;margin:0}.content-search-container ::ng-deep .mat-mdc-dialog-container{padding:0!important;overflow:initial}.content-search-container .icon{font-size:22px!important}\n"], dependencies: [{ kind: "directive", type: i8.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i8.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i8.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: i8.NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }, { kind: "directive", type: i8.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { kind: "directive", type: i8.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }, { kind: "directive", type: i8.NgSwitchDefault, selector: "[ngSwitchDefault]" }, { kind: "directive", type: i9.ɵNgNoValidate, selector: "form:not([ngNoForm]):not([ngNativeValidate])" }, { kind: "directive", type: i9.DefaultValueAccessor, selector: "input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]" }, { kind: "directive", type: i9.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i9.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i9.NgModel, selector: "[ngModel]:not([formControlName]):not([formControl])", inputs: ["name", "disabled", "ngModel", "ngModelOptions"], outputs: ["ngModelChange"], exportAs: ["ngModel"] }, { kind: "directive", type: i9.NgForm, selector: "form:not([ngNoForm]):not([formGroup]),ng-form,[ngForm]", inputs: ["ngFormOptions"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "component", type: i10.MatToolbar, selector: "mat-toolbar", inputs: ["color"], exportAs: ["matToolbar"] }, { kind: "component", type: i11.MatButton, selector: "    button[mat-button], button[mat-raised-button], button[mat-flat-button],    button[mat-stroked-button]  ", exportAs: ["matButton"] }, { kind: "component", type: i11.MatIconButton, selector: "button[mat-icon-button]", exportAs: ["matButton"] }, { kind: "component", type: i12.MatIcon, selector: "mat-icon", inputs: ["color", "inline", "svgIcon", "fontSet", "fontIcon"], exportAs: ["matIcon"] }, { kind: "directive", type: i13.MatTooltip, selector: "[matTooltip]", inputs: ["matTooltipPosition", "matTooltipPositionAtOrigin", "matTooltipDisabled", "matTooltipShowDelay", "matTooltipHideDelay", "matTooltipTouchGestures", "matTooltip", "matTooltipClass"], exportAs: ["matTooltip"] }, { kind: "directive", type: i1.MatDialogClose, selector: "[mat-dialog-close], [matDialogClose]", inputs: ["aria-label", "type", "mat-dialog-close", "matDialogClose"], exportAs: ["matDialogClose"] }, { kind: "directive", type: i1.MatDialogTitle, selector: "[mat-dialog-title], [matDialogTitle]", inputs: ["id"], exportAs: ["matDialogTitle"] }, { kind: "directive", type: i1.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }, { kind: "component", type: i14.MatDivider, selector: "mat-divider", inputs: ["vertical", "inset"] }, { kind: "directive", type: i15.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["disabled", "id", "placeholder", "name", "required", "type", "errorStateMatcher", "aria-describedby", "value", "readonly"], exportAs: ["matInput"] }, { kind: "component", type: i16.MatFormField, selector: "mat-form-field", inputs: ["hideRequiredMarker", "color", "floatLabel", "appearance", "subscriptSizing", "hintLabel"], exportAs: ["matFormField"] }, { kind: "directive", type: i16.MatPrefix, selector: "[matPrefix], [matIconPrefix], [matTextPrefix]", inputs: ["matTextPrefix"] }, { kind: "directive", type: i16.MatSuffix, selector: "[matSuffix], [matIconSuffix], [matTextSuffix]", inputs: ["matTextSuffix"] }, { kind: "component", type: i17.MatProgressBar, selector: "mat-progress-bar", inputs: ["color", "value", "bufferValue", "mode"], outputs: ["animationEnd"], exportAs: ["matProgressBar"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.1.0", ngImport: i0, type: ContentSearchDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mime-search', template: "<div class=\"content-search-container\">\n  <ng-container [ngSwitch]=\"isHandsetOrTabletInPortrait\">\n    <mat-toolbar *ngSwitchCase=\"true\" color=\"primary\">\n      <button\n        mat-icon-button\n        class=\"close-content-search-dialog-button\"\n        [aria-label]=\"intl.closeLabel\"\n        [matTooltip]=\"intl.closeLabel\"\n        [matDialogClose]=\"true\"\n      >\n        <mat-icon>close</mat-icon>\n      </button>\n      <h1 mat-dialog-title class=\"heading\">{{ intl.searchLabel }}</h1>\n    </mat-toolbar>\n    <mat-toolbar *ngSwitchDefault class=\"justify-between\">\n      <h1 mat-dialog-title class=\"heading heading-desktop\">{{\n        intl.searchLabel\n      }}</h1>\n      <button\n        mat-icon-button\n        class=\"close-content-search-dialog-button\"\n        [aria-label]=\"intl.closeLabel\"\n        [matTooltip]=\"intl.closeLabel\"\n        [matDialogClose]=\"true\"\n      >\n        <mat-icon>close</mat-icon>\n      </button>\n    </mat-toolbar>\n  </ng-container>\n  <mat-dialog-content class=\"content-search-form\">\n    <form (ngSubmit)=\"onSubmit($event)\" #searchForm=\"ngForm\">\n      <mat-form-field class=\"content-search-box\">\n        <button\n          type=\"submit\"\n          matPrefix\n          mat-icon-button\n          [attr.aria-label]=\"intl.searchLabel\"\n          [matTooltip]=\"intl.searchLabel\"\n        >\n          <mat-icon class=\"icon\">search</mat-icon>\n        </button>\n        <input\n          #query\n          cdkFocusInitial\n          matInput\n          class=\"content-search-input\"\n          [(ngModel)]=\"q\"\n          [attr.aria-label]=\"intl.searchLabel\"\n          name=\"q\"\n          autocomplete=\"off\"\n        />\n        <button\n          *ngIf=\"q\"\n          type=\"button\"\n          class=\"clearSearchButton\"\n          matSuffix\n          mat-icon-button\n          [attr.aria-label]=\"intl.clearSearchLabel\"\n          [matTooltip]=\"intl.clearSearchLabel\"\n          [disabled]=\"isSearching\"\n          (click)=\"clear()\"\n        >\n          <mat-icon class=\"icon\">clear</mat-icon>\n        </button>\n      </mat-form-field>\n    </form>\n    <div\n      #contentSearchResult\n      class=\"content-search-result-container\"\n      [ngStyle]=\"tabHeight\"\n    >\n      <div class=\"content-search-result\">\n        <ng-container *ngIf=\"!isSearching\">\n          <input type=\"hidden\" class=\"numberOfHits\" [value]=\"numberOfHits\" />\n          <ng-container *ngIf=\"currentSearch && currentSearch.length > 0\">\n            <div\n              *ngIf=\"numberOfHits > 0\"\n              [innerHTML]=\"intl.resultsFoundLabel(numberOfHits, currentSearch)\"\n            ></div>\n            <div\n              *ngIf=\"numberOfHits === 0\"\n              [innerHTML]=\"intl.noResultsFoundLabel(currentSearch)\"\n            ></div>\n          </ng-container>\n          <ng-container *ngFor=\"let hit of hits; let last = last\">\n            <button\n              #hitButton\n              mat-button\n              [color]=\"currentHit && hit.id === currentHit.id ? 'accent' : null\"\n              [ngClass]=\"'hit'\"\n              (click)=\"goToHit(hit)\"\n              (keydown.enter)=\"goToHit(hit)\"\n            >\n              <div class=\"flex items-start justify-between\">\n                <div class=\"summary\"\n                  >{{ hit.before }} <em>{{ hit.match }}</em>\n                  {{ hit.after }}</div\n                >\n                <div class=\"canvasGroup ml-2\">{{ hit.index + 1 }}</div>\n              </div>\n            </button>\n            <mat-divider *ngIf=\"!last\"></mat-divider>\n          </ng-container>\n        </ng-container>\n        <mat-progress-bar\n          *ngIf=\"isSearching\"\n          mode=\"indeterminate\"\n        ></mat-progress-bar>\n      </div>\n    </div>\n  </mat-dialog-content>\n</div>\n", styles: [".content-search-container .mat-mdc-dialog-title{color:inherit;padding:0 2px 16px}.content-search-container ::ng-deep mat-form-field .mdc-text-field{background:transparent!important}.content-search-container .content-search-box{width:100%}.content-search-container .content-search-input{font-size:20px}.content-search-container .content-search-result-container{overflow:auto;margin-bottom:8px}.content-search-container .content-search-result{padding:8px 16px}.content-search-container .content-search-result .mat-mdc-button{line-height:initial;height:auto;white-space:initial;word-wrap:initial;max-width:none;padding:8px 0;text-align:left;font-size:14px}.content-search-container ::ng-deep .current-content-search{font-weight:700}.content-search-container em{font-weight:700}.content-search-container .canvasGroupLabel{text-align:right;opacity:.54}.content-search-container .mat-mdc-dialog-content{max-height:none;padding:8px;margin:0}.content-search-container ::ng-deep .mat-mdc-dialog-container{padding:0!important;overflow:initial}.content-search-container .icon{font-size:22px!important}\n"] }]
        }], ctorParameters: () => [{ type: i1.MatDialogRef }, { type: i2.MimeViewerIntl }, { type: i3.BreakpointObserver }, { type: i0.ChangeDetectorRef }, { type: i4.MimeResizeService }, { type: i5.IiifManifestService }, { type: i6.IiifContentSearchService }, { type: i7.ContentSearchNavigationService }], propDecorators: { resultContainer: [{
                type: ViewChild,
                args: ['contentSearchResult', { static: true }]
            }], qEl: [{
                type: ViewChild,
                args: ['query', { static: true }]
            }], hitList: [{
                type: ViewChildren,
                args: ['hitButton', { read: ElementRef }]
            }] } });
//# sourceMappingURL=data:application/json;base64,