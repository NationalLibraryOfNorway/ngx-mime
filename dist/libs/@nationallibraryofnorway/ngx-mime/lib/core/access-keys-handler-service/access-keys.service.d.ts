import { ContentSearchDialogService } from '../../content-search-dialog/content-search-dialog.service';
import { ContentsDialogService } from '../../contents-dialog/contents-dialog.service';
import { ViewDialogService } from '../../view-dialog/view-dialog.service';
import { AltoService } from '../alto-service/alto.service';
import { CanvasService } from '../canvas-service/canvas-service';
import { IiifContentSearchService } from '../iiif-content-search-service/iiif-content-search.service';
import { IiifManifestService } from '../iiif-manifest-service/iiif-manifest-service';
import { MimeDomHelper } from '../mime-dom-helper';
import { ModeService } from '../mode-service/mode.service';
import { ContentSearchNavigationService } from '../navigation/content-search-navigation-service/content-search-navigation.service';
import { ViewerService } from '../viewer-service/viewer.service';
import * as i0 from "@angular/core";
export declare class AccessKeysService {
    private viewerService;
    private canvasService;
    private modeService;
    private iiifManifestService;
    private iiifContentSearchService;
    private contentSearchDialogService;
    private contentsDialogService;
    private viewDialogService;
    private mimeDomHelper;
    private contentSearchNavigationService;
    private altoService;
    private isSearchable;
    private hasHits;
    private disabledKeys;
    private subscriptions;
    private invert;
    constructor(viewerService: ViewerService, canvasService: CanvasService, modeService: ModeService, iiifManifestService: IiifManifestService, iiifContentSearchService: IiifContentSearchService, contentSearchDialogService: ContentSearchDialogService, contentsDialogService: ContentsDialogService, viewDialogService: ViewDialogService, mimeDomHelper: MimeDomHelper, contentSearchNavigationService: ContentSearchNavigationService, altoService: AltoService);
    initialize(): void;
    destroy(): void;
    handleKeyEvents(event: KeyboardEvent): void;
    private goToNextCanvasGroup;
    private goToPreviousCanvasGroup;
    private goToFirstCanvasGroup;
    private goToLastCanvasGroup;
    private rotateClockWise;
    private toggleRecognizedTextContentInSplitView;
    private goToNextHit;
    private goToPreviousHit;
    private zoomIn;
    private zoomOut;
    private zoomHome;
    private toggleSearchDialog;
    private toggleContentsDialog;
    private toggleFullscreen;
    private resetSearch;
    private isManifestSearchable;
    private isZoomedIn;
    private updateDisabledKeys;
    private disableKeysForContentDialog;
    private diableKeysForContentSearchDialog;
    private isRecognizedTextContentModeOnly;
    private disableKeysForRecognizedTextContentOnly;
    private resetDisabledKeys;
    private isKeyDisabled;
    unsubscribe(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<AccessKeysService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<AccessKeysService>;
}
//# sourceMappingURL=access-keys.service.d.ts.map